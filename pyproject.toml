[project]
name = "pyconsole-portable"
version = "0.1.0"
description = "Self-contained Python app with urllib3 HTTP requests"
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "urllib3>=2.0.0"
]
authors = [
    {name = "PyConsole Team", email = "team@pyconsole.dev"}
]
keywords = ["python", "packaging", "deployment", "portable"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = {text = "MIT"}
[tool.setuptools]
py-modules = ["app"]

[project.urls]
Homepage = "https://github.com/karlorz/pyconsole"
Repository = "https://github.com/karlorz/pyconsole"
Documentation = "https://github.com/karlorz/pyconsole#readme"
Issues = "https://github.com/karlorz/pyconsole/issues"

[tool.uv]
dev-dependencies = [
    "pyinstaller>=6.0.0",
    "python-semantic-release>=9.0.0",
    "ruff>=0.5.0",
    "build>=1.0.0"
]

[tool.semantic_release]
assets = []
build_command = "uv run pip install --upgrade build && uv run python -m build"
commit_message = "chore(release): {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = true
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]
version_source = "tag"
version_pattern = "^(?P<major>0|[1-9]\\d*)\\.(?P<minor>0|[1-9]\\d*)\\.(?P<patch>0|[1-9]\\d*)(?:-(?P<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?P<build>metadata))?$"
# Skip publishing if no changes detected
allow_no_commits = true

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote.token]
env = "GH_TOKEN"